{
  "name": "nuxt-app",
  "private": true,
  "type": "module",
  "scripts": {
    "build": "NODE_OPTIONS='--max-old-space-size=4096' nuxt build",
    "dev": "nuxt dev",
    "generate": "nuxt generate",
    "preview": "nuxt preview",
    "postinstall": "nuxt prepare",
    "lint": "[ -d .nuxt ] || npx nuxt prepare; eslint .",
    "lint:fix": "[ -d .nuxt ] || npx nuxt prepare; eslint . --fix",
    "geocode": "node scripts/run-geocoding.mjs",
    "db:clean-tokens": "npx tsx scripts/clean-expired-tokens.ts",
    "admin:add": "npx tsx scripts/manage-admin.ts add",
    "admin:remove": "npx tsx scripts/manage-admin.ts remove",
    "admin:list": "npx tsx scripts/manage-admin.ts list",
    "help": "node scripts/show-help.mjs",
    "check-i18n": "node scripts/check-i18n.js",
    "check-translations": "node scripts/check-i18n-translations.js",
    "i18n:add": "node scripts/add-translation.js",
    "test": "vitest --config vitest.config.unit.ts",
    "test:unit": "vitest --config vitest.config.unit.ts",
    "test:unit:run": "vitest run --config vitest.config.unit.ts --silent",
    "test:ui": "vitest --ui --config vitest.config.unit.ts --silent",
    "test:nuxt": "vitest --config vitest.config.nuxt.ts --silent",
    "test:nuxt:run": "vitest run --config vitest.config.nuxt.ts --silent",
    "test:e2e": "vitest --config vitest.config.e2e.ts --silent",
    "test:e2e:run": "vitest run --config vitest.config.e2e.ts --silent",
    "test:all": "npm run test:unit:run && npm run test:nuxt:run && npm run test:e2e:run",
    "test:run": "vitest run --config vitest.config.unit.ts --silent",
    "test:db": "cross-env TEST_WITH_DB=true vitest --config vitest.config.integration.ts",
    "test:db:run": "node scripts/test-db-run.js",
    "test:setup": "docker compose -f docker-compose.test.yml up -d --wait",
    "test:teardown": "docker compose -f docker-compose.test.yml down",
    "kill-servers": "node scripts/kill-servers.js",
    "docker:test": "docker compose -f docker-compose.test-all.yml up test-runner --build --abort-on-container-exit",
    "docker:test:ui": "docker compose -f docker-compose.test-ui.yml up --build",
    "docker:test:clean": "docker compose -f docker-compose.test-all.yml down -v",
    "docker:test:rebuild": "docker compose -f docker-compose.test-all.yml build --no-cache",
    "docker:test:unit": "docker compose -f docker-compose.test-simple.yml up --build --abort-on-container-exit",
    "docker:test:integration": "docker compose -f docker-compose.test-integration.yml up --build --abort-on-container-exit --no-attach test-db",
    "docker:test:unit:clean": "docker compose -f docker-compose.test-simple.yml down -v",
    "docker:test:integration:clean": "docker compose -f docker-compose.test-integration.yml down -v",
    "docker:test:ui:clean": "docker compose -f docker-compose.test-ui.yml down -v",
    "docker:dev": "docker compose -f docker-compose.dev.yml up --build",
    "docker:dev:detached": "docker compose -f docker-compose.dev.yml up -d --build",
    "docker:dev:down": "docker compose -f docker-compose.dev.yml down",
    "docker:dev:logs": "docker compose -f docker-compose.dev.yml logs -f app",
    "docker:dev:exec": "docker compose -f docker-compose.dev.yml exec app sh",
    "db:seed:dev": "npx tsx scripts/seed-dev.ts",
    "db:reset:dev": "npx prisma migrate reset --force --skip-seed",
    "docker:release:up": "docker compose -f docker-compose.release.yml up -d --build",
    "docker:release:down": "docker compose -f docker-compose.release.yml down",
    "format": "prettier -w \"**/*.{js,ts,vue,json,md,yml,yaml}\"",
    "format:check": "prettier -c \"**/*.{js,ts,vue,json,md,yml,yaml}\"",
    "favicons": "tsx scripts/generate-favicons.ts",
    "deps:reset": "bash scripts/reset-deps.sh"
  },
  "prettier": {
    "singleQuote": true,
    "semi": false,
    "printWidth": 100,
    "trailingComma": "es5"
  },
  "dependencies": {
    "@fullcalendar/core": "^6.1.15",
    "@fullcalendar/daygrid": "^6.1.15",
    "@fullcalendar/interaction": "^6.1.15",
    "@fullcalendar/list": "^6.1.15",
    "@fullcalendar/vue3": "^6.1.15",
    "@internationalized/date": "^3.8.2",
    "@nuxt/eslint": "^1.7.1",
    "@nuxt/image": "^1.10.0",
    "@nuxt/scripts": "^0.11.10",
    "@nuxt/test-utils": "^3.19.2",
    "@nuxt/ui": "^3.3.0",
    "@nuxtjs/i18n": "^10.0.3",
    "@pinia/nuxt": "^0.11.2",
    "@prisma/nuxt": "^0.3.0",
    "@types/nodemailer": "^6.4.17",
    "@unhead/vue": "^2.0.12",
    "@vueuse/core": "^13.6.0",
    "@vueuse/nuxt": "^13.6.0",
    "bcryptjs": "^3.0.2",
    "eslint": "^9.32.0",
    "flag-icons": "^7.5.0",
    "jspdf": "^3.0.2",
    "luxon": "^3.5.0",
    "md5": "^2.3.0",
    "nodemailer": "^7.0.5",
    "nuxt": "^4.1.1",
    "nuxt-auth-utils": "^0.5.23",
    "pinia": "^3.0.3",
    "rehype-sanitize": "^6.0.0",
    "rehype-stringify": "^10.0.0",
    "remark-gfm": "^4.0.0",
    "remark-parse": "^11.0.0",
    "remark-rehype": "^11.1.0",
    "sharp": "0.33.5",
    "tsx": "^4.19.1",
    "typescript": "^5.8.3",
    "unified": "^11.0.4",
    "vue": "^3.5.17",
    "vue-router": "^4.5.1",
    "web-push": "^3.6.7"
  },
  "devDependencies": {
    "@iconify-json/bx": "^1.2.2",
    "@iconify-json/flag": "^1.2.9",
    "@iconify-json/guidance": "^1.2.2",
    "@iconify-json/heroicons": "^1.2.2",
    "@iconify-json/lucide": "^1.2.62",
    "@iconify-json/material-symbols": "^1.2.31",
    "@iconify-json/material-symbols-light": "^1.2.31",
    "@iconify-json/mdi": "^1.2.3",
    "@iconify-json/simple-icons": "^1.2.25",
    "@testing-library/vue": "^8.1.0",
    "@vitejs/plugin-vue": "^6.0.1",
    "@vitest/ui": "^3.2.4",
    "@vue/test-utils": "^2.4.6",
    "cross-env": "^10.0.0",
    "happy-dom": "^18.0.1",
    "nuxt-file-storage": "^0.3.0",
    "prettier": "^3.3.3",
    "prisma": "^6.15.0",
    "vite-tsconfig-paths": "^5.1.4",
    "vitest": "^3.2.4",
    "wait-on": "^8.0.4"
  },
  "engines": {
    "node": ">=22 <23"
  }
}
