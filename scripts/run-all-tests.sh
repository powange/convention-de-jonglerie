#!/bin/sh

sleep 5
mkdir -p /app/public/uploads

# Application des migrations avec gestion d'erreur visible
echo "üîÑ Application des migrations..."
if ! npx prisma migrate deploy; then
  echo "‚ùå √âchec des migrations - abandon des tests"
  exit 1
fi

# V√©rifier la pr√©sence des d√©pendances critiques et installer si n√©cessaire
node -e "require.resolve('nuxt-auth-utils')" >/dev/null 2>&1 || {
  echo "nuxt-auth-utils manquant: ex√©cution de npm ci..."
  npm ci
}

# Pr√©parer Nuxt pour les tests
echo "üîß Pr√©paration de Nuxt..."
rm -rf /app/.nuxt || echo "Nettoyage .nuxt ignor√© (volume mont√©)"
npx nuxt prepare || {
  echo "‚ö†Ô∏è  Nuxt prepare a √©chou√©, tentative de r√©cup√©ration..."
  mkdir -p /app/.nuxt
  touch /app/.nuxt/ui.css
}

echo "============================================="
echo "    Lancement de tous les tests"
echo "============================================="
echo ""

# Tests unitaires simples
echo "==================================="
echo "    1. Tests unitaires simples     "
echo "==================================="
npm run test:run
echo ""

# Tests Nuxt
echo "==================================="
echo "    2. Tests Nuxt                  "
echo "==================================="
npm run test:nuxt:run
echo ""

# Tests avec base de donn√©es
echo "==================================="
echo "    3. Tests avec base de donn√©es  "
echo "==================================="
# Script d'int√©gration unique (g√®re la pr√©sence/absence de Docker)
TEST_WITH_DB=true npm run test:db:run
echo ""

echo "==================================="
echo "    ‚úÖ Tous les tests termin√©s     "
echo "==================================="