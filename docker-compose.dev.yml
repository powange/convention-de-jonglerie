version: '3.8'

# Configuration Docker Compose pour le développement
services:
  # Base de données MySQL pour le développement
  database:
    image: mysql:8.0
    container_name: convention-db-dev
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: convention_db_dev
      MYSQL_USER: convention_user
      MYSQL_PASSWORD: convention_password
    ports:
      - "3307:3306"  # Port différent pour éviter les conflits
    volumes:
      - mysql_dev_data:/var/lib/mysql
      - ./docker/mysql/init:/docker-entrypoint-initdb.d
    networks:
      - convention-dev-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # Application en mode développement
  app-dev:
    build:
      context: .
      dockerfile: Dockerfile
      target: base
    container_name: convention-app-dev
    restart: unless-stopped
    ports:
      - "3001:3000"  # Port différent pour le dev
    environment:
      DATABASE_URL: "mysql://convention_user:convention_password@database:3306/convention_db_dev"
      JWT_SECRET: "dev-secret-key-not-for-production"
      NUXT_HOST: "0.0.0.0"
      NUXT_PORT: "3000"
      NODE_ENV: "development"
    volumes:
      - .:/app
      - /app/node_modules
      - ./public/uploads:/app/public/uploads
    networks:
      - convention-dev-network
    depends_on:
      database:
        condition: service_healthy
    command: ["sh", "-c", "npm run dev"]

  # Adminer pour le développement
  adminer-dev:
    image: adminer:latest
    container_name: convention-adminer-dev
    restart: unless-stopped
    ports:
      - "8081:8080"  # Port différent pour le dev
    environment:
      ADMINER_DEFAULT_SERVER: database
    networks:
      - convention-dev-network
    depends_on:
      - database

volumes:
  mysql_dev_data:
    driver: local

networks:
  convention-dev-network:
    driver: bridge