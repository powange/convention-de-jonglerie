{
  "env": {
    "CLAUDE_CODE_MAX_OUTPUT_TOKENS": "45000"
  },
  "permissions": {
    "allow": [
      "WebFetch(domain:ui.nuxt.com)",
      "Bash(timeout 30s npm run dev)",
      "Bash(npm run lint)",
      "Bash(npm run:*)",
      "Bash(ls:*)",
      "Bash(git add:*)",
      "Bash(git push:*)",
      "Bash(curl:*)",
      "Bash(find:*)",
      "Bash(npx tsc:*)",
      "Bash(mkdir:*)",
      "Bash(grep:*)",
      "Bash(rm:*)",
      "Bash(npx nuxi:*)",
      "Bash(node:*)",
      "Bash(npm install:*)",
      "WebFetch(domain:nuxt.com)",
      "Bash(docker:*)",
      "Bash(npx wait-on:*)",
      "Bash($env:TEST_WITH_DB=\"true\")",
      "Bash(npm uninstall:*)",
      "WebFetch(domain:www.prisma.io)",
      "Bash(set TEST_WITH_DB=true)",
      "Bash(npx vitest run:*)",
      "WebFetch(domain:ui2.nuxt.com)",
      "Bash(npx vitest:*)",
      "WebFetch(domain:i18n.nuxtjs.org)",
      "Bash(mv:*)",
      "WebFetch(domain:localhost)",
      "Bash(rg:*)",
      "Bash(git commit:*)",
      "Bash(npm test:*)",
      "WebFetch(domain:ui3.nuxt.com)",
      "Bash(npm ls:*)",
      "Bash(npx prisma generate:*)",
      "Bash(chmod:*)",
      "Bash(echo:*)",
      "Bash(cat:*)",
      "Bash(for lang in it nl pl pt ru uk da)",
      "Bash(do tail -10 i18n/locales/$lang.json)",
      "Bash(done)",
      "Bash(for lang in en de es it nl pl pt ru uk da)",
      "Bash(do echo \"=== $lang ===\")",
      "Bash(do)",
      "Bash(__NEW_LINE__ grep -n \"optional_title_placeholder\" i18n/locales/$lang.json)",
      "Bash(__NEW_LINE__ done)",
      "Bash(for file in /root/projets/convention-de-jonglerie/i18n/locales/{de,es,it,nl,pl,pt,ru,uk,da}.json)",
      "Bash(sed:*)",
      "Bash(git checkout:*)",
      "Read(/tmp/**)",
      "Read(/tmp/**)",
      "WebFetch(domain:fullcalendar.io)",
      "WebFetch(domain:github.com)",
      "Bash(npx prisma migrate dev:*)",
      "Bash(for lang in de es it nl pl pt ru uk da)",
      "Bash(for lang in fr en de es it nl pl pt ru uk da)",
      "Bash(npx prisma migrate:*)",
      "Bash(npx prisma:*)",
      "Bash(mysql:*)",
      "Bash(for lang in en de es it nl pt ru pl uk da)",
      "Bash(npm ci:*)",
      "Bash(python3:*)",
      "Bash(for:*)",
      "Bash(awk:*)",
      "Read(///**)",
      "Bash(/tmp/check_components_correct.sh:*)",
      "Bash(/tmp/final_analysis.sh:*)",
      "Bash(git mv:*)",
      "WebSearch",
      "WebFetch(domain:vueuse.org)",
      "WebFetch(domain:nuxtseo.com)",
      "Bash(/tmp/update-other-pages.sh:*)",
      "Bash(/tmp/fix-ogsitename.sh:*)",
      "Bash(/tmp/remove-ogsitename.sh:*)",
      "Bash(tree:*)",
      "WebFetch(domain:image.nuxt.com)",
      "WebFetch(domain:www.facebook.com)",
      "WebFetch(domain:unhead.unjs.io)",
      "WebFetch(domain:ogp.me)",
      "Bash(export NODE_ENV=test)",
      "WebFetch(domain:www.npmjs.com)",
      "Bash(git log:*)",
      "WebFetch(domain:api.helloasso.com)",
      "WebFetch(domain:dev.helloasso.com)",
      "Bash(npm info:*)",
      "Bash(/tmp/fix-participant-modal.sh:*)",
      "Bash(/tmp/fix-external.sh:*)",
      "Bash(npx tsx:*)",
      "WebFetch(domain:heroicons.com)",
      "mcp__nuxt-ui-remote__get_component",
      "SlashCommand(/translate-todos)",
      "mcp__nuxt-ui-remote__get_component_metadata",
      "Bash(xargs:*)",
      "SlashCommand(/run-tests)",
      "SlashCommand(/lint-fix)",
      "SlashCommand(/commit-push)",
      "Bash(NODE_ENV=test npx vitest run test/nuxt/components --config vitest.config.nuxt.ts)",
      "Bash(NODE_ENV=test npx vitest run --config vitest.config.nuxt.ts test/nuxt/components/AddressAutocomplete.test.ts)",
      "Bash(NODE_ENV=test npx vitest run --config vitest.config.nuxt.ts test/nuxt/components)",
      "Bash(NODE_ENV=test npx vitest run --config vitest.config.nuxt.ts test/nuxt/components/*)",
      "Bash(NODE_ENV=test npx vitest run --config vitest.config.nuxt.ts test/nuxt/components/ui)",
      "Bash(NODE_ENV=test npx vitest run --config vitest.config.nuxt.ts test/nuxt/components/notifications)",
      "Bash(NODE_ENV=test npx vitest run --config vitest.config.nuxt.ts test/nuxt/components/admin test/nuxt/components/edition)",
      "mcp__nuxt-ui__get_component",
      "WebFetch(domain:vuemail.net)",
      "Bash(NODE_ENV=test npx vitest run test/nuxt/pages/auth.reset-password.page.nuxt.test.ts --config vitest.config.nuxt.ts)",
      "Bash(NODE_ENV=test npx vitest run test/nuxt/pages/auth.reset-password.page.nuxt.test.ts)",
      "Bash(NODE_ENV=test npx vitest run test/nuxt/server/api/auth/resend-verification.post.test.ts)",
      "SlashCommand(/quality-check)",
      "mcp__nuxt__search_nuxt_docs",
      "mcp__nuxt-ui__list_components",
      "Bash(NODE_ENV=test npx vitest run:*)",
      "Bash(TEST_WITH_DB=true npx vitest run:*)",
      "Bash(npm audit:*)",
      "Bash(sort:*)",
      "Bash([ -d .nuxt ])",
      "Bash(npx nuxt:*)",
      "Bash(npx eslint:*)",
      "Bash(do if grep -q '\"\"notifications\"\"' \"i18n/locales/$lang/components.json\")",
      "Bash(then echo \"❌ $lang: Notifications trouvées\")",
      "Bash(else echo \"✓ $lang: Pas de notifications\")",
      "Bash(fi)",
      "Bash(do echo \"=== $lang ===\" grep -A3 \"admin_mode_enabled\" i18n/locales/$lang/auth.json)",
      "Bash(do echo \"$lang\")",
      "Bash(do echo -n \"$lang: \")",
      "Bash(DEEPL_API_KEY=\"359ae8e7-be24-40b1-b9ee-4923e9da852d:fx\" node scripts/translate-with-deepl.js)",
      "Bash(do echo \"=== Vérification de la langue: $lang ===\" echo \"Nombre total de clés dans common.json:\" grep -o '\"\"\"\"[^\"\"\"\"]*\"\"\"\":' \"i18n/locales/$lang/common.json\")",
      "Bash(wc -l echo \"\" echo \"Échantillon de traductions (10 premières clés du calendrier):\" head -15 \"i18n/locales/$lang/common.json\" echo \"\" echo \"Vérification des clés problématiques (rate-limited):\" grep -E \"(conventions_count|services\\.atm|services\\.canteen|continue_with)\" \"i18n/locales/$lang/admin.json\" \"i18n/locales/$lang/auth.json\")",
      "Bash(DEEPL_API_KEY=\"test\" node scripts/translate-with-deepl.js --help)",
      "Bash(npm run lint:fix:*)",
      "Bash(npm run format:*)",
      "Bash(npm run test:unit:run:*)",
      "Bash(npm run test:nuxt:run:*)",
      "Bash(npm run lint:*)"
    ],
    "deny": [],
    "ask": [],
    "defaultMode": "acceptEdits"
  },
  "enabledMcpjsonServers": [
    "nuxt",
    "nuxt-ui",
    "vitest-runner"
  ]
}
